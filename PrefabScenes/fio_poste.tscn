[gd_scene load_steps=5 format=2]

[ext_resource path="res://Resources/Textures/bricks.png" type="Texture" id=1]

[sub_resource type="CylinderMesh" id=1]
radial_segments = 14
rings = 16

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx,world_vertex_coords;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform vec3 point_A;
uniform vec3 point_B;
uniform float barriguinha = 10.0;

void vertex() {
	vec3 local_vertex = (inverse(WORLD_MATRIX)*vec4(VERTEX,1.0)).xyz;
	float r = 1.0 - (local_vertex.y+1.0)/2.0;
	
	VERTEX = point_A + (point_B-point_A) * r ;
	
	VERTEX.y += barriguinha*(pow(r,1.5)-r);
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/albedo = Color( 0.847059, 0.847059, 0.847059, 1 )
shader_param/specular = 0.0
shader_param/metallic = 1.0
shader_param/roughness = 1.0
shader_param/point_size = 0.0
shader_param/uv1_scale = Vector3( 5, 5, 5 )
shader_param/uv1_offset = null
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = null
shader_param/point_A = Vector3( -7.227, 2.216, 0 )
shader_param/point_B = Vector3( 5, 0, 0 )
shader_param/barriguinha = 10.0
shader_param/texture_albedo = ExtResource( 1 )

[node name="Spatial" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, 0, 0, 1, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )
